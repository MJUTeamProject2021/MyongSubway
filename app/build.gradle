//apply plugin -> plugins id로 변경, 오류시 확인
plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'
    defaultConfig {
        applicationId "com.example.myongsubway"
        minSdkVersion 30
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'x86'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def getSdkDir() {
    Properties local = new Properties()
    local.load(new FileInputStream("${rootDir}/local.properties"))
    return local.getProperty('sdk.dir')
}

def BuildIl2Cpp(String workingDir, String targetDirectory, String architecture, String abi, String configuration) {
    exec {
        commandLine(workingDir + "/src/main/Il2CppOutputProject/IL2CPP/build/deploy/netcoreapp3.1/il2cpp.exe",
                "--compile-cpp",
                "--libil2cpp-static",
                "--platform=Android",
                "--architecture=" + architecture,
                "--configuration=" + configuration,
                "--outputpath=" + workingDir + targetDirectory + abi + "/libil2cpp.so",
                "--cachedirectory=" + workingDir + "/build/il2cpp_"+ abi + "_" + configuration + "/il2cpp_cache",
                "--additional-include-directories=" + workingDir + "/src/main/Il2CppOutputProject/IL2CPP/external/bdwgc/include",
                "--additional-include-directories=" + workingDir + "/src/main/Il2CppOutputProject/IL2CPP/libil2cpp/include",
                "--tool-chain-path=" + android.ndkDirectory,
                "--map-file-parser=" + workingDir + "/src/main/Il2CppOutputProject/IL2CPP/MapFileParser/MapFileParser.exe",
                "--generatedcppdir=" + workingDir + "/src/main/Il2CppOutputProject/Source/il2cppOutput",
                "--baselib-directory=" + workingDir + "/src/main/jniStaticLibs/" + abi,
                "--dotnetprofile=unityaot")
        environment "ANDROID_SDK_ROOT", getSdkDir()
    }
    delete workingDir + targetDirectory + abi + "/libil2cpp.sym.so"
    ant.move(file: workingDir + targetDirectory + abi + "/libil2cpp.dbg.so", tofile: workingDir + "/symbols/" + abi + "/libil2cpp.so")
}

android {
    task BuildIl2CppTask {
        doLast {
            BuildIl2Cpp(projectDir.toString().replaceAll('\\\\', '/'), '/src/main/jniLibs/', 'ARMv7', 'armeabi-v7a', 'Release');
            BuildIl2Cpp(projectDir.toString().replaceAll('\\\\', '/'), '/src/main/jniLibs/', 'ARM64', 'arm64-v8a', 'Release');
        }
    }
    afterEvaluate {
        if (project(':app').tasks.findByName('mergeDebugJniLibFolders'))
            project(':app').mergeDebugJniLibFolders.dependsOn BuildIl2CppTask
        if (project(':app').tasks.findByName('mergeReleaseJniLibFolders'))
            project(':app').mergeReleaseJniLibFolders.dependsOn BuildIl2CppTask
    }
    sourceSets {
        main {
            jni.srcDirs = ["src/main/Il2CppOutputProject"]
        }
    }
    ndkVersion '19.2.5345600'
}
dependencies {
    implementation 'com.otaliastudios:zoomlayout:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.otaliastudios:zoomlayout:1.8.0'
    implementation 'com.google.android.material:material:1.4.0' // 탭 레이아웃
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'       // 뷰페이저2
    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'       // jxl (엑셀 읽는 외부 라이브러리)
    implementation platform('com.google.firebase:firebase-bom:29.0.0')  // Import the Firebase BoM
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-database:19.2.1'
    implementation 'com.google.firebase:firebase-firestore:24.0.0'
    implementation 'com.google.firebase:firebase-auth:21.0.1'
    implementation 'com.google.code.gson:gson:2.4'
    implementation files('libs\\unity-classes.jar')
    implementation files('libs\\unity-classes.jar')
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //implementation fileTree(dir: 'C:\\Users\\LeeHaYoon\\Documents\\MJUProject21-2\\MyongSubway\\app\\libs', include: ['*.aar', '*.jar'], exclude: [])
}